# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  ios:
    runs-on: macOS-latest
    steps:
        - uses: actions/checkout@v2
        - name: Set up Python 3.8
          uses: actions/setup-python@v2
          with:
            python-version: 3.8
        - name: Install dependencies
          run: |
            python -m pip install --upgrade pip
            if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        - name: Build
          env:
            CONAN_LOGIN_USERNAME: ${{ secrets.CONAN_LOGIN_USERNAME }}
            CONAN_PASSWORD: ${{ secrets.CONAN_PASSWORD }}
          run: |
            python build_ios.py
        - name: Artifacts
          uses: actions/upload-artifact@v2
          with:	
            name: build
            path: build/**
  macos:
    runs-on: macOS-latest
    steps:
        - uses: actions/checkout@v2
        - name: Set up Python 3.8
          uses: actions/setup-python@v2
          with:
            python-version: 3.8
        - name: Install dependencies
          run: |
            python -m pip install --upgrade pip
            if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        - name: Build
          env:
            CONAN_LOGIN_USERNAME: ${{ secrets.CONAN_LOGIN_USERNAME }}
            CONAN_PASSWORD: ${{ secrets.CONAN_PASSWORD }}
          run: |
            python build.py
        - name: Artifacts
          uses: actions/upload-artifact@v2
          with:	
            name: build
            path: build/**
  linux:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install dependencies
      uses: actions/cache@v2
      id: cache-venv
      with:
        path: ./.venv/
        key: ${{ runner.os }}-venv-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-venv-
      - run: python -m venv ./.venv && . ./.venv/bin/activate && 
            pip install -r requirements.txt
        if: steps.cache-venv.outputs.cache-hit != 'true'
      - run: . ./.venv/bin/activate && nosetests tests/
    - name: Build
      env:
        CONAN_LOGIN_USERNAME: ${{ secrets.CONAN_LOGIN_USERNAME }}
        CONAN_PASSWORD: ${{ secrets.CONAN_PASSWORD }}
      run: |
        python build.py
    - name: Artifacts
      uses: actions/upload-artifact@v2
      with:	
        name: build
        path: build/**
